# Queries
type Query {

    # User
    findUserById(userId: ID!): User
    findAllUsersPaginated(page: Int!, size: Int!): UserPaginator!

    # Course
    findCourseById(courseId: ID!): Course
    findAllCoursesPaginated(page: Int!, size: Int!): CoursePaginator!
}

type Mutation {
    createUser(userInput: UserInput!): User!
    createCourse(courseInput: CourseInput!): Course!
    createLesson(lessonInput: LessonInput!): Lesson!
    createResource(resourceInput: ResourceInput!): Resource!

    updateUser(id: ID!, userInput: UserInput!): User!
    updateCourse(id: ID!, courseInput: CourseInput!): Course!
    updateLesson(id: ID!, lessonInput: LessonInput!): Lesson!
    updateResource(id: ID!, resourceInput: ResourceInput!): Resource!

    deleteUser(id: ID!): Boolean!
    deleteCourse(id: ID!): Boolean!
    deleteLesson(id: ID!): Boolean!
    deleteResource(id: ID!): Boolean!

    enrollStudentToCourse(studentId: ID!, courseId: ID!): Course!
}

# Response
type User {
    id: ID!
    name: String!
    email: String!
    rol: Role!
    createdAt: String!
    updatedAt: String
    coursesTeaching: [Course!] # Cursos que enseña un profesor
    coursesEnrolled: [Course!] # Cursos en los que está inscrito un estudiante
}

enum Role {
    STUDENT
    TEACHER
    ADMIN
}

type Course {
    id: ID!
    title: String!
    description: String
    teacher: User!
    students: [User!]
    lessons: [Lesson!]
    createdAt: String!
    updatedAt: String
}

type Lesson {
    id: ID!
    title: String!
    content: String!
    course: Course!
    resources: [Resource!]
    createdAt: String!
    updatedAt: String
}

type Resource {
    id: ID!
    type: ResourceType!
    url: String!
    description: String
    lesson: Lesson!
}

enum ResourceType {
    VIDEO
    PDF
    LINK
}

type UserPaginator {
    data: [User!]!
    totalPages: Int!
    currentPage: Int!
}

type CoursePaginator {
    data: [Course!]!
    totalPages: Int!
    currentPage: Int!
}

# Input

input UserInput {
    name: String!
    email: String!
    password: String!
    rol: Role!
}

input CourseInput {
    title: String!
    description: String
    teacherId: ID!
}

input LessonInput {
    title: String!
    content: String!
    courseId: ID!
}

input ResourceInput {
    type: ResourceType!
    url: String!
    description: String
    lessonId: ID!
}